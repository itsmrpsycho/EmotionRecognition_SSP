c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(
GMM Classifier Report:
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\metrics\_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\metrics\_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\metrics\_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        18
           1       0.19      1.00      0.31        20
           2       0.00      0.00      0.00        12
           3       0.00      0.00      0.00        14
           4       0.00      0.00      0.00        18
           5       0.00      0.00      0.00         9
           6       0.00      0.00      0.00        16

    accuracy                           0.19       107
   macro avg       0.03      0.14      0.04       107
weighted avg       0.03      0.19      0.06       107

SVM Classifier Report:
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\metrics\_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\metrics\_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\metrics\_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
              precision    recall  f1-score   support

           0       0.17      1.00      0.29        18
           1       0.00      0.00      0.00        20
           2       0.00      0.00      0.00        12
           3       0.00      0.00      0.00        14
           4       0.00      0.00      0.00        18
           5       0.00      0.00      0.00         9
           6       0.00      0.00      0.00        16

    accuracy                           0.17       107
   macro avg       0.02      0.14      0.04       107
weighted avg       0.03      0.17      0.05       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.13      0.11      0.12        18
           1       0.00      0.00      0.00        20
           2       0.00      0.00      0.00        12
           3       0.20      0.29      0.24        14
           4       0.25      0.06      0.09        18
           5       0.08      0.44      0.14         9
           6       0.08      0.06      0.07        16

    accuracy                           0.11       107
   macro avg       0.11      0.14      0.09       107
weighted avg       0.11      0.11      0.09       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.43      0.67      0.52        18
           1       0.83      0.75      0.79        20
           2       0.29      0.17      0.21        12
           3       0.36      0.36      0.36        14
           4       0.62      0.56      0.59        18
           5       0.60      0.67      0.63         9
           6       0.50      0.44      0.47        16

    accuracy                           0.53       107
   macro avg       0.52      0.51      0.51       107
weighted avg       0.54      0.53      0.53       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.33      0.06      0.10        18
           1       0.07      0.05      0.06        20
           2       0.00      0.00      0.00        12
           3       0.23      0.57      0.33        14
           4       0.00      0.00      0.00        18
           5       0.19      0.33      0.24         9
           6       0.17      0.31      0.22        16

    accuracy                           0.17       107
   macro avg       0.14      0.19      0.13       107
weighted avg       0.14      0.17      0.12       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.46      0.61      0.52        18
           1       0.72      0.65      0.68        20
           2       0.29      0.17      0.21        12
           3       0.25      0.29      0.27        14
           4       0.65      0.61      0.63        18
           5       0.56      0.56      0.56         9
           6       0.50      0.50      0.50        16

    accuracy                           0.50       107
   macro avg       0.49      0.48      0.48       107
weighted avg       0.51      0.50      0.50       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.22      0.11      0.15        18
           1       0.21      0.70      0.32        20
           2       0.29      0.17      0.21        12
           3       0.00      0.00      0.00        14
           4       0.00      0.00      0.00        18
           5       0.00      0.00      0.00         9
           6       0.00      0.00      0.00        16

    accuracy                           0.17       107
   macro avg       0.10      0.14      0.10       107
weighted avg       0.11      0.17      0.11       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.41      0.78      0.54        18
           1       0.57      0.60      0.59        20
           2       0.00      0.00      0.00        12
           3       0.29      0.29      0.29        14
           4       0.78      0.39      0.52        18
           5       0.44      0.44      0.44         9
           6       0.57      0.50      0.53        16

    accuracy                           0.46       107
   macro avg       0.44      0.43      0.42       107
weighted avg       0.47      0.46      0.44       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.06      0.06      0.06        18
           1       0.12      0.15      0.13        20
           2       0.00      0.00      0.00        12
           3       0.00      0.00      0.00        14
           4       0.18      0.28      0.22        18
           5       0.00      0.00      0.00         9
           6       0.25      0.31      0.28        16

    accuracy                           0.13       107
   macro avg       0.09      0.11      0.10       107
weighted avg       0.10      0.13      0.11       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.42      0.78      0.55        18
           1       0.79      0.55      0.65        20
           2       0.67      0.17      0.27        12
           3       0.43      0.43      0.43        14
           4       0.44      0.22      0.30        18
           5       0.50      0.89      0.64         9
           6       0.44      0.50      0.47        16

    accuracy                           0.50       107
   macro avg       0.53      0.50      0.47       107
weighted avg       0.53      0.50      0.47       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\metrics\_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\metrics\_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\metrics\_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        18
           1       0.20      0.05      0.08        20
           2       0.18      0.25      0.21        12
           3       0.13      0.14      0.14        14
           4       0.00      0.00      0.00        18
           5       0.00      0.00      0.00         9
           6       0.10      0.38      0.15        16

    accuracy                           0.11       107
   macro avg       0.09      0.12      0.08       107
weighted avg       0.09      0.11      0.08       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.44      0.78      0.56        18
           1       0.88      0.70      0.78        20
           2       0.14      0.08      0.11        12
           3       0.15      0.14      0.15        14
           4       0.56      0.28      0.37        18
           5       0.62      0.89      0.73         9
           6       0.53      0.56      0.55        16

    accuracy                           0.50       107
   macro avg       0.47      0.49      0.46       107
weighted avg       0.50      0.50      0.48       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.10      0.11      0.11        18
           1       0.15      0.20      0.17        20
           2       0.25      0.17      0.20        12
           3       0.00      0.00      0.00        14
           4       0.00      0.00      0.00        18
           5       0.50      0.11      0.18         9
           6       0.02      0.06      0.03        16

    accuracy                           0.09       107
   macro avg       0.15      0.09      0.10       107
weighted avg       0.12      0.09      0.09       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.42      0.78      0.55        18
           1       0.71      0.60      0.65        20
           2       0.50      0.08      0.14        12
           3       0.33      0.36      0.34        14
           4       0.58      0.39      0.47        18
           5       0.55      0.67      0.60         9
           6       0.47      0.50      0.48        16

    accuracy                           0.50       107
   macro avg       0.51      0.48      0.46       107
weighted avg       0.52      0.50      0.48       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.17      0.44      0.25        18
           1       0.09      0.10      0.10        20
           2       0.06      0.08      0.07        12
           3       0.00      0.00      0.00        14
           4       0.00      0.00      0.00        18
           5       0.00      0.00      0.00         9
           6       0.09      0.06      0.07        16

    accuracy                           0.11       107
   macro avg       0.06      0.10      0.07       107
weighted avg       0.07      0.11      0.08       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.43      0.72      0.54        18
           1       0.78      0.70      0.74        20
           2       0.33      0.08      0.13        12
           3       0.40      0.29      0.33        14
           4       0.47      0.39      0.42        18
           5       0.56      1.00      0.72         9
           6       0.47      0.44      0.45        16

    accuracy                           0.51       107
   macro avg       0.49      0.52      0.48       107
weighted avg       0.50      0.51      0.49       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.26      0.44      0.33        18
           1       0.11      0.05      0.07        20
           2       0.00      0.00      0.00        12
           3       0.14      0.36      0.20        14
           4       0.10      0.06      0.07        18
           5       0.00      0.00      0.00         9
           6       0.33      0.31      0.32        16

    accuracy                           0.19       107
   macro avg       0.14      0.17      0.14       107
weighted avg       0.15      0.19      0.15       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.38      0.67      0.48        18
           1       0.74      0.70      0.72        20
           2       0.25      0.08      0.12        12
           3       0.36      0.36      0.36        14
           4       0.40      0.33      0.36        18
           5       0.89      0.89      0.89         9
           6       0.21      0.19      0.20        16

    accuracy                           0.46       107
   macro avg       0.46      0.46      0.45       107
weighted avg       0.45      0.46      0.44       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.20      0.11      0.14        18
           1       0.25      0.05      0.08        20
           2       0.18      0.25      0.21        12
           3       0.00      0.00      0.00        14
           4       0.00      0.00      0.00        18
           5       0.00      0.00      0.00         9
           6       0.19      0.62      0.29        16

    accuracy                           0.15       107
   macro avg       0.12      0.15      0.10       107
weighted avg       0.13      0.15      0.11       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.44      0.78      0.56        18
           1       0.64      0.45      0.53        20
           2       0.00      0.00      0.00        12
           3       0.36      0.29      0.32        14
           4       0.54      0.39      0.45        18
           5       0.50      0.89      0.64         9
           6       0.44      0.50      0.47        16

    accuracy                           0.47       107
   macro avg       0.42      0.47      0.42       107
weighted avg       0.44      0.47      0.44       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        18
           1       0.12      0.05      0.07        20
           2       0.00      0.00      0.00        12
           3       0.29      0.14      0.19        14
           4       0.00      0.00      0.00        18
           5       0.14      0.33      0.19         9
           6       0.16      0.50      0.25        16

    accuracy                           0.13       107
   macro avg       0.10      0.15      0.10       107
weighted avg       0.10      0.13      0.09       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.45      0.78      0.57        18
           1       0.50      0.50      0.50        20
           2       0.40      0.17      0.24        12
           3       0.22      0.14      0.17        14
           4       0.42      0.28      0.33        18
           5       0.64      0.78      0.70         9
           6       0.26      0.31      0.29        16

    accuracy                           0.42       107
   macro avg       0.41      0.42      0.40       107
weighted avg       0.41      0.42      0.40       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.14      0.11      0.12        18
           1       0.25      0.10      0.14        20
           2       0.06      0.08      0.07        12
           3       0.13      0.36      0.19        14
           4       0.00      0.00      0.00        18
           5       0.00      0.00      0.00         9
           6       0.08      0.12      0.10        16

    accuracy                           0.11       107
   macro avg       0.10      0.11      0.09       107
weighted avg       0.11      0.11      0.10       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.44      0.67      0.53        18
           1       0.59      0.50      0.54        20
           2       0.33      0.08      0.13        12
           3       0.36      0.36      0.36        14
           4       0.50      0.33      0.40        18
           5       0.53      1.00      0.69         9
           6       0.41      0.44      0.42        16

    accuracy                           0.47       107
   macro avg       0.45      0.48      0.44       107
weighted avg       0.46      0.47      0.44       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.15      0.28      0.20        18
           1       0.33      0.10      0.15        20
           2       0.00      0.00      0.00        12
           3       0.00      0.00      0.00        14
           4       0.14      0.22      0.17        18
           5       0.00      0.00      0.00         9
           6       0.11      0.06      0.08        16

    accuracy                           0.11       107
   macro avg       0.10      0.09      0.09       107
weighted avg       0.13      0.11      0.10       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.50      0.83      0.62        18
           1       0.60      0.45      0.51        20
           2       0.20      0.08      0.12        12
           3       0.30      0.21      0.25        14
           4       0.53      0.56      0.54        18
           5       0.55      0.67      0.60         9
           6       0.47      0.50      0.48        16

    accuracy                           0.49       107
   macro avg       0.45      0.47      0.45       107
weighted avg       0.46      0.49      0.46       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.22      0.11      0.15        18
           1       0.00      0.00      0.00        20
           2       0.10      0.42      0.16        12
           3       0.00      0.00      0.00        14
           4       0.20      0.06      0.09        18
           5       0.15      0.44      0.23         9
           6       0.00      0.00      0.00        16

    accuracy                           0.11       107
   macro avg       0.10      0.15      0.09       107
weighted avg       0.09      0.11      0.08       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.33      0.44      0.38        18
           1       0.69      0.55      0.61        20
           2       1.00      0.25      0.40        12
           3       0.21      0.21      0.21        14
           4       0.46      0.33      0.39        18
           5       0.75      1.00      0.86         9
           6       0.32      0.50      0.39        16

    accuracy                           0.45       107
   macro avg       0.54      0.47      0.46       107
weighted avg       0.51      0.45      0.45       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.18      0.39      0.25        18
           1       0.00      0.00      0.00        20
           2       0.18      0.42      0.25        12
           3       0.00      0.00      0.00        14
           4       0.00      0.00      0.00        18
           5       0.00      0.00      0.00         9
           6       0.16      0.19      0.17        16

    accuracy                           0.14       107
   macro avg       0.07      0.14      0.10       107
weighted avg       0.07      0.14      0.10       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.33      0.67      0.44        18
           1       0.61      0.70      0.65        20
           2       0.50      0.17      0.25        12
           3       0.36      0.29      0.32        14
           4       0.50      0.22      0.31        18
           5       0.78      0.78      0.78         9
           6       0.44      0.44      0.44        16

    accuracy                           0.47       107
   macro avg       0.50      0.47      0.46       107
weighted avg       0.49      0.47      0.45       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.29      0.22      0.25        18
           1       0.25      0.05      0.08        20
           2       0.13      0.25      0.17        12
           3       0.08      0.07      0.07        14
           4       0.10      0.06      0.07        18
           5       0.23      0.33      0.27         9
           6       0.17      0.31      0.22        16

    accuracy                           0.17       107
   macro avg       0.18      0.19      0.16       107
weighted avg       0.18      0.17      0.15       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.33      0.72      0.46        18
           1       0.75      0.60      0.67        20
           2       0.33      0.08      0.13        12
           3       0.50      0.36      0.42        14
           4       0.40      0.22      0.29        18
           5       0.67      0.89      0.76         9
           6       0.47      0.50      0.48        16

    accuracy                           0.48       107
   macro avg       0.49      0.48      0.46       107
weighted avg       0.49      0.48      0.46       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        18
           1       0.25      0.45      0.32        20
           2       0.00      0.00      0.00        12
           3       0.12      0.07      0.09        14
           4       0.00      0.00      0.00        18
           5       0.25      0.44      0.32         9
           6       0.15      0.19      0.17        16

    accuracy                           0.16       107
   macro avg       0.11      0.16      0.13       107
weighted avg       0.11      0.16      0.12       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.38      0.56      0.45        18
           1       0.56      0.50      0.53        20
           2       0.33      0.08      0.13        12
           3       0.33      0.29      0.31        14
           4       0.64      0.39      0.48        18
           5       0.50      1.00      0.67         9
           6       0.32      0.38      0.34        16

    accuracy                           0.44       107
   macro avg       0.44      0.46      0.42       107
weighted avg       0.45      0.44      0.42       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.27      0.17      0.21        18
           1       0.00      0.00      0.00        20
           2       1.00      0.08      0.15        12
           3       0.17      0.29      0.21        14
           4       0.00      0.00      0.00        18
           5       0.12      0.44      0.19         9
           6       0.20      0.31      0.24        16

    accuracy                           0.16       107
   macro avg       0.25      0.18      0.14       107
weighted avg       0.22      0.16      0.13       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.50      0.89      0.64        18
           1       0.56      0.50      0.53        20
           2       0.50      0.08      0.14        12
           3       0.50      0.43      0.46        14
           4       0.64      0.50      0.56        18
           5       0.50      0.89      0.64         9
           6       0.54      0.44      0.48        16

    accuracy                           0.53       107
   macro avg       0.53      0.53      0.49       107
weighted avg       0.54      0.53      0.50       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.15      0.11      0.13        18
           1       0.40      0.10      0.16        20
           2       0.04      0.08      0.05        12
           3       0.10      0.07      0.08        14
           4       0.00      0.00      0.00        18
           5       0.11      0.33      0.16         9
           6       0.07      0.06      0.06        16

    accuracy                           0.09       107
   macro avg       0.12      0.11      0.09       107
weighted avg       0.14      0.09      0.09       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.46      0.61      0.52        18
           1       0.63      0.60      0.62        20
           2       0.17      0.08      0.11        12
           3       0.31      0.29      0.30        14
           4       0.44      0.44      0.44        18
           5       0.57      0.89      0.70         9
           6       0.31      0.25      0.28        16

    accuracy                           0.45       107
   macro avg       0.41      0.45      0.42       107
weighted avg       0.42      0.45      0.43       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\metrics\_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\metrics\_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\metrics\_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
              precision    recall  f1-score   support

           0       0.17      0.28      0.21        18
           1       0.35      0.35      0.35        20
           2       0.14      0.17      0.15        12
           3       0.06      0.07      0.07        14
           4       0.00      0.00      0.00        18
           5       0.00      0.00      0.00         9
           6       0.00      0.00      0.00        16

    accuracy                           0.14       107
   macro avg       0.10      0.12      0.11       107
weighted avg       0.12      0.14      0.13       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.43      0.50      0.46        18
           1       0.59      0.65      0.62        20
           2       0.50      0.25      0.33        12
           3       0.46      0.43      0.44        14
           4       0.48      0.56      0.51        18
           5       0.58      0.78      0.67         9
           6       0.42      0.31      0.36        16

    accuracy                           0.50       107
   macro avg       0.49      0.50      0.48       107
weighted avg       0.49      0.50      0.48       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.12      0.17      0.14        18
           1       0.21      0.15      0.18        20
           2       0.00      0.00      0.00        12
           3       0.22      0.36      0.27        14
           4       0.00      0.00      0.00        18
           5       0.00      0.00      0.00         9
           6       0.00      0.00      0.00        16

    accuracy                           0.10       107
   macro avg       0.08      0.10      0.08       107
weighted avg       0.09      0.10      0.09       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.39      0.72      0.51        18
           1       0.47      0.40      0.43        20
           2       0.33      0.17      0.22        12
           3       0.13      0.14      0.14        14
           4       0.22      0.11      0.15        18
           5       0.67      0.89      0.76         9
           6       0.20      0.19      0.19        16

    accuracy                           0.36       107
   macro avg       0.35      0.37      0.34       107
weighted avg       0.33      0.36      0.33       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\metrics\_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\metrics\_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\metrics\_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
              precision    recall  f1-score   support

           0       0.14      0.06      0.08        18
           1       0.33      0.25      0.29        20
           2       0.00      0.00      0.00        12
           3       0.00      0.00      0.00        14
           4       0.07      0.06      0.06        18
           5       0.10      0.22      0.13         9
           6       0.20      0.56      0.30        16

    accuracy                           0.17       107
   macro avg       0.12      0.16      0.12       107
weighted avg       0.14      0.17      0.13       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.46      0.67      0.55        18
           1       0.67      0.50      0.57        20
           2       0.25      0.17      0.20        12
           3       0.31      0.36      0.33        14
           4       0.43      0.17      0.24        18
           5       0.70      0.78      0.74         9
           6       0.32      0.50      0.39        16

    accuracy                           0.44       107
   macro avg       0.45      0.45      0.43       107
weighted avg       0.45      0.44      0.43       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        18
           1       0.17      0.05      0.08        20
           2       0.00      0.00      0.00        12
           3       0.14      0.71      0.23        14
           4       0.00      0.00      0.00        18
           5       0.00      0.00      0.00         9
           6       0.33      0.19      0.24        16

    accuracy                           0.13       107
   macro avg       0.09      0.14      0.08       107
weighted avg       0.10      0.13      0.08       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.32      0.50      0.39        18
           1       0.57      0.60      0.59        20
           2       0.17      0.08      0.11        12
           3       0.27      0.21      0.24        14
           4       0.50      0.39      0.44        18
           5       0.60      0.67      0.63         9
           6       0.41      0.44      0.42        16

    accuracy                           0.42       107
   macro avg       0.41      0.41      0.40       107
weighted avg       0.41      0.42      0.41       107
c:\Users\sanni\miniconda3\envs\coding2\lib\site-packages\sklearn\cluster\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=2.
  warnings.warn(

GMM Classifier Report:
              precision    recall  f1-score   support

           0       0.00      0.00      0.00        18
           1       0.00      0.00      0.00        20
           2       0.13      0.33      0.19        12
           3       0.12      0.36      0.18        14
           4       0.18      0.11      0.14        18
           5       0.00      0.00      0.00         9
           6       0.12      0.12      0.12        16

    accuracy                           0.12       107
   macro avg       0.08      0.13      0.09       107
weighted avg       0.08      0.12      0.09       107

SVM Classifier Report:
              precision    recall  f1-score   support

           0       0.37      0.61      0.46        18
           1       0.67      0.50      0.57        20
           2       0.17      0.08      0.11        12
           3       0.25      0.29      0.27        14
           4       0.71      0.28      0.40        18
           5       0.64      0.78      0.70         9
           6       0.41      0.56      0.47        16

    accuracy                           0.44       107
   macro avg       0.46      0.44      0.43       107
weighted avg       0.47      0.44      0.43       107
[34m[1mwandb[0m: [32m[41mERROR[0m The nbformat package was not found. It is required to save notebook history.
